% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/copy_SS_inputs.R
\name{copy_SS_inputs}
\alias{copy_SS_inputs}
\title{Copy a the Stock Synthesis input files from one directory to another}
\usage{
copy_SS_inputs(
  dir.old = NULL,
  dir.new = NULL,
  create.dir = TRUE,
  overwrite = FALSE,
  recursive = FALSE,
  use_ss_new = FALSE,
  copy_exe = FALSE,
  copy_par = FALSE,
  dir.exe = NULL,
  verbose = TRUE
)
}
\arguments{
\item{dir.old}{Location of model files to be copied, either an absolute
path or relative to the working directory.}

\item{dir.new}{New location to which the files should be copied,
either an absolute path or relative to the working directory.}

\item{create.dir}{Create \code{dir.new} directory if it doesn't exist already?}

\item{overwrite}{A logical value specifying if the existing file(s)
should be overwritten. The default value is \code{overwrite = FALSE}.}

\item{recursive}{A logical value passed to the \code{recursive} argument of
\code{\link[=dir.create]{dir.create()}} that specifies if elements of the path other than the last
be created?}

\item{use_ss_new}{Use .ss_new files instead of original inputs?}

\item{copy_exe}{Copy any executables found in \code{dir.old} to \code{dir.new} or
dir.exe (if provided)?}

\item{copy_par}{Copy any .par files found in \code{dir.old} to \code{dir.new}?}

\item{dir.exe}{Path to executable to copy instead of any in \code{dir.old}.}

\item{verbose}{A logical value specifying if output should be printed
to the screen.}
}
\value{
A logical value is invisibly returned, indicating whether all input files
were copied successfully.
}
\description{
Reads the starter.ss file to figure out the names of the control and
data files, than copies those files along with starter.ss, forecast.ss,
and wtatage.ss (if present) to a new directory, as specified.
}
\examples{
\dontrun{
# A theoretical example if "old_model" was present
# but expect an error
copy_SS_inputs(
  dir.old = "c:/SS/old_model",
  dir.new = "c:/SS/new_model"
)
# A working example using files stored in {r4ss}
copy_SS_inputs(
  dir.old = system.file("extdata", "simple_small", package = "r4ss"),
  dir.new = "test"
)
unlink(test, recursive = TRUE)
}

}
\seealso{
Other run functions: 
\code{\link{jitter}()},
\code{\link{populate_multiple_folders}()},
\code{\link{profile}()},
\code{\link{retro}()},
\code{\link{run}()},
\code{\link{tune_comps}()}
}
\author{
Ian G. Taylor
}
\concept{run functions}
