# Workflow that require an SS executable to run
# See https://github.com/r-lib/actions/tree/master/examples#readme for
# additional example workflows available for the R community.

name: run-tests-with-SS

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"
      
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up R release version
        uses: r-lib/actions/setup-r@master
    # kable extra is giving issues, so move from depends to suggests.
    # This works b/c the kable extra pkg is getting downloaded, but for some
    # reason when calling devtools tests it cant be found!
      - name: Hack to move kableExtra from imports to suggests.
        run: |
          des <- readLines("DESCRIPTION")
          ke_line <- grep("kableExtra", des)
          imp_line <- grep("Imports:", des)
          des <- des[-ke_line]
          if((ke_line-1) != imp_line) des[ke_line-1] <- gsub(",", "", des[ke_line-1])
          sug_line <- grep("^Suggests:", des)
          des <- append(des, values = "    kableExtra,", after = sug_line)
          writeLines(des, "DESCRIPTION")
        shell: Rscript {0}
      - name: Hack to move stringr from imports to suggests  
        run: |
          des <- readLines("DESCRIPTION")
          ke_line <- grep("stringr", des)
          imp_line <- grep("Imports:", des)
          des <- des[-ke_line]
          if((ke_line-1) != imp_line) des[ke_line-1] <- gsub(",", "", des[ke_line-1])
          sug_line <- grep("^Suggests:", des)
          des <- append(des, values = "    stringr,", after = sug_line)
          writeLines(des, "DESCRIPTION")
        shell: Rscript {0}
      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}
      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-
      - name: Install system dependencies
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')
      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
          install.packages("devtools")
          install.packages("kableExtra")
        shell: Rscript {0}  
        
      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}
        
      - name: Get the 3.30.16 SS executable
        run: |
          wget -O ss https://vlab.ncep.noaa.gov/documents/259399/11683431/ss/2bd2329d-4623-c420-a360-abd6c3dd52c1?version=1.0&t=1599077106790&download=true
      - name: see items in dir
        run: ls -l
      - name: see wd
        run: pwd
      - name: move the exes
        run: |
          sudo chmod a+x ss
          cp ss inst/extdata/simple_3.30.12/ss
          cp ss inst/extdata/simple_3.30.13/ss
          rm ss
      - name: Get a 3.24 SS executable
        run: |
          wget -O ss https://vlab.ncep.noaa.gov/documents/259399/2000201/ss_3.24Z/037e3921-1f00-611a-1c30-d7a5c1063835?version=1.1&t=1608655599519&download=true
      - name: Change permissions, copy 3.24 exe
        run: |
          sudo chmod a+x ss
          mv ss inst/extdata/simple_3.24/ss
          
      # note: may want to run other scripts, too.      
      - name: Run tests in test-runs
        run: devtools::test(filter = "runs",  stop_on_failure = TRUE)
        shell: Rscript {0}
        
      - name: Run tests in test-tune_comps
        run: devtools::test(filter = "tune_comps", stop_on_failure = TRUE)
        shell: Rscript {0}
